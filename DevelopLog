2022.04.07
	finished:
		1.	Senator的广播、全部节点的同步终于搞定。不确定的因素 senator的广播时间可能会影响到同步（网络规模越大，packet在网络中走的时间越长，
		存在这样一种情况，一个竞争消息的生成时间很早，但是到达全部节点的时间可能会很长。目前这个广播时间设置为20s，随着节点规模扩大，可能
		要修改这个参数）；
		2.	交易随机生成，打包区块、广播区块，同步，本地保存区块（vector实现）
		3.	
	TODO list：
		1.	为了参与共识需要与最近的参议员节点联系（直接建立连接还是转发？）
		2.	参议员节点对每个candidate投票，并在参议员节点内部行成共识
		3.	广播mining node，其余节点本地更新mining node的地址
		4.	数据统计（excel）
2022.04.08
	finished:
		1.	Senator的广播、全部节点的同步终于搞定。不确定的因素 senator的广播时间可能会影响到同步（网络规模越大，packet在网络中走的时间越长，
		存在这样一种情况，一个竞争消息的生成时间很早，但是到达全部节点的时间可能会很长。目前这个广播时间设置为20s，随着节点规模扩大，可能
		要修改这个参数）；
		2.	交易随机生成，打包区块、广播区块，同步，本地保存区块（vector实现）
		3.	
	TODO list：
		1.	为了参与共识需要与最近的参议员节点联系（直接建立连接还是转发？）
		2.	参议员节点对每个candidate投票，并在参议员节点内部行成共识
		3.	广播mining node，其余节点本地更新mining node的地址
		4.	数据统计（excel）
2022.04.09
	finished:
		1.	Senator的广播、全部节点的同步终于搞定。不确定的因素 senator的广播时间可能会影响到同步（网络规模越大，packet在网络中走的时间越长，
		存在这样一种情况，一个竞争消息的生成时间很早，但是到达全部节点的时间可能会很长。目前这个广播时间设置为20s，随着节点规模扩大，可能
		要修改这个参数）；
		2.	交易随机生成，打包区块、广播区块，同步，本地保存区块（vector实现）
		3.	可以通过本模块获取到其它区块的邻居节点了（问题存在，无法获得rte最后一个模块的邻居节点，原因未知）	
	TODO list：
		1.	为了参与共识需要与最近的参议员节点联系（直接建立连接还是转发？）
		2.	参议员节点对每个candidate投票，并在参议员节点内部行成共识
		3.	广播mining node，其余节点本地更新mining node的地址
		4.	数据统计（excel）
		5.	计算MF
		6.	普通节点参与consensus，发送包含MF值的消息给最近的senator
		7.	设置mining node buffer
		8.	senator收集信息将candidate存放到一个vector
		9.	senator选出一个MF最高的，在senator内部广播并投票。（细节还需再想）
		10. miningnode轮转：miningnode广播，buffer to list
		
2022.04.14
	finished:
		1.	为了参与共识需要与最近的参议员节点联系（采用了转发，直接建立更符合方案，但是做不出来了）
		2.	计算MF
		3.	上面的6.选择不用vector，收到新的节点参与共识的消息直接比较本地的candidateNode的MF，如果大于本地candidate的MF直接替换candidateNode。
	TODO list:
		1.	senator选出一个MF最高的，在senator内部广播并投票。
		2.	参议员节点对每个candidate投票，并在参议员节点内部行成共识
		3.	广播mining node，其余节点本地更新mining node的地址
		4.	投票规则
2022.04.15
	today's work:
		1.	senator选出一个MF最高的，在senator内部广播。
		2.	试验了一下更改节点数量，发现更改节点数量要配合修改net5.ned中的关于连接的参数，否则会报不明错误（怀疑是omnet++机制）
	TODO list：
		1.	参议员节点对每个candidate投票，并在参议员节点内部行成共识
		2.	广播mining node，其余节点本地更新mining node的地址
		3.	投票规则
2022.04.24
	finished work：
		1.	参议员节点轮转；
		2.	参议员节点依据PoMF进行共识，使得MiningNode轮转
		3.	交易处理、区块生成、区块处理
	TODO list：
		1.	恶意节点标记
		2.	rep值优化
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		